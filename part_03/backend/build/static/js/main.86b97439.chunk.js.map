{"version":3,"sources":["services/people.js","components/Filter.js","components/PersonForm.js","components/People.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","peopleService","getAll","axios","get","then","response","data","create","person","post","remove","id","delete","update","put","Filter","filter","onChange","value","PersonForm","props","name","nameOnChange","number","numberOnChange","type","onClick","addPerson","People","people","removePerson","map","Notification","notification","undefined","className","styleClass","message","App","useState","setPeople","newName","setNewName","newNumber","setNewNumber","setFilter","setNotification","useEffect","catch","error","console","log","peopleToShow","toLowerCase","includes","displayNotification","setTimeout","event","target","preventDefault","find","personObject","returnedPerson","concat","window","confirm","newInfo","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86b97439.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/people\";\r\n\r\nconst getAll = () =>\r\n  axios\r\n    .get(baseUrl)\r\n    .then(response => response.data);\r\n\r\nconst create = (person) =>\r\n  axios\r\n    .post(baseUrl, person)\r\n    .then(response => response.data);\r\n\r\nconst remove = (id) =>\r\n  axios.delete(`${baseUrl}/${id}`);\r\n\r\nconst update = (person) =>\r\n  axios\r\n    .put(`${baseUrl}/${person.id}`, person)\r\n    .then(response => response.data);\r\n\r\nconst peopleService = {\r\n  getAll,\r\n  create,\r\n  remove,\r\n  update\r\n}\r\n\r\nexport default peopleService;","import React from \"react\";\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <form>\r\n    <div>filter shown with <input value={filter} onChange={onChange} /></div>\r\n  </form>\r\n);\r\n\r\nexport default Filter;","import React from \"react\";\r\n\r\nconst PersonForm = (props) => (\r\n  <form>\r\n    <div>\r\n      name: <input value={props.name} onChange={props.nameOnChange} />\r\n    </div>\r\n    <div>\r\n      number: <input value={props.number} onChange={props.numberOnChange} />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\" onClick={props.addPerson}>add</button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default PersonForm;","import React from \"react\";\r\n\r\nconst People = ({ people, removePerson }) => (\r\n  <div>\r\n    {people.map(person =>\r\n      <div key={person.id}>\r\n        {person.name} {person.number} <button onClick={() => { removePerson(person) }}>remove</button>\r\n      </div>)\r\n    }\r\n  </div >\r\n)\r\n\r\nexport default People;","import React from \"react\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === undefined) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={notification.styleClass}>{notification.message}</div>\r\n  )\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport peopleService from \"./services/people\"\r\n\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport People from \"./components/People\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nconst App = () => {\r\n  const [people, setPeople] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [notification, setNotification] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    peopleService\r\n      .getAll()\r\n      .then(people => {\r\n        setPeople(people);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  /* name input */\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  }\r\n\r\n  /* phone input */\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  }\r\n\r\n  /* add button */\r\n  const addPerson = (event) => {\r\n    event.preventDefault();\r\n    const person = people.find(person => person.name === newName);\r\n    if (person === undefined) {\r\n      const personObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      };\r\n\r\n      peopleService\r\n        .create(personObject)\r\n        .then(returnedPerson => {\r\n          displayNotification({\r\n            message: `Added ${returnedPerson.name}`,\r\n            styleClass: \"success\"\r\n          });\r\n          setPeople(people.concat(returnedPerson));\r\n          setNewName(\"\");\r\n          setNewNumber(\"\");\r\n        })\r\n        .catch(error => {\r\n          displayNotification({\r\n            message: error.response.data.error,\r\n            styleClass: \"error\"\r\n          });\r\n          console.log(error);\r\n        });\r\n    }\r\n    else {\r\n      if (window.confirm(`${person.name} is already added to phonebook. Replace the old number with a new one?`)) {\r\n        const newInfo = { ...person, number: newNumber };\r\n        peopleService\r\n          .update(newInfo)\r\n          .then(returnedPerson => {\r\n            displayNotification({\r\n              message: `${newInfo.name}'number has been changed to ${newInfo.number}`,\r\n              styleClass: \"success\"\r\n            });\r\n            setPeople(people.map(p => p.id !== newInfo.id ? p : returnedPerson));\r\n            setNewName(\"\");\r\n            setNewNumber(\"\");\r\n          })\r\n          .catch(error => {\r\n            displayNotification({\r\n              message: error.response.data.error,\r\n              styleClass: \"error\"\r\n            });\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  /* remove person */\r\n  const removePerson = (person) => {\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      peopleService\r\n        .remove(person.id)\r\n        .then(() => {\r\n          displayNotification({\r\n            message: `${person.name} has been removed`,\r\n            styleClass: \"success\"\r\n          });\r\n          setPeople(people.filter(p => p.id !== person.id));\r\n        })\r\n        .catch(error => {\r\n          displayNotification({\r\n            message: error.response.data.error,\r\n            styleClass: \"error\"\r\n          });\r\n          setPeople(people.filter(p => p.id !== person.id));\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  /* filter input */\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  const peopleToShow = people.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()));\r\n\r\n  /* display the notification */\r\n  const displayNotification = (notification) => {\r\n    const NOTIFICATION_TIME_OUT = 4_000;\r\n    setNotification(notification);\r\n    setTimeout(() => {\r\n      setNotification(undefined);\r\n    }, NOTIFICATION_TIME_OUT);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification} />\r\n      <Filter\r\n        filter={filter}\r\n        onChange={handleFilterChange}\r\n      />\r\n\r\n      <h2>Add a new person</h2>\r\n      <PersonForm\r\n        name={newName}\r\n        nameOnChange={handleNameChange}\r\n        number={newNumber}\r\n        numberOnChange={handleNumberChange}\r\n        addPerson={addPerson} />\r\n\r\n      <h2>Numbers</h2>\r\n      <People people={peopleToShow} removePerson={removePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}